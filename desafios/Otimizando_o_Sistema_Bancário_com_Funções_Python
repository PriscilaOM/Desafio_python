#separar as funções de saque, depósito e extrato em funções
#criar duas novas funções: cadastrar isuário(cliente) 
#cadastrar conta bancária
#def depositar, sacar, extrato, criar_usuario, conta_bancaria
#por posições e nomeados
#def saque argumentos apenas por nome keyword_only sugestão de argumentos: saldo, valor, extrato, limite, numero_saques, limite_saque. Retorno: saldo e extrato
#def deposito argumentos apenas por posição positional_only  sugestão de argumentos: saldo, valor, extrato. retorno: saldo e extrato
#def extrato argumentos por posição e nome positional_only e keyword_only. argumentos posicionais: saldo, argumentos nomeados: extratos
#def criar_usuario todo usuario é uma lista: nome, data de nascimento, cpf e endreço. O endereço é uma string
# com formato de logradouro, num, bairro, cidade/sigla estado. CPF somente numeros, somente um usuário por cpf

#def criar_conta em uma lista composta: agencia, numero de conta e usuario. número da conta começa em 1. numero da agência é fixo "0001", o usuário pode ter mais de uma conta, mas uma conta pertence a somente um usuário
#def listar_contas
import textwrap

def menu():
    menu = '''

    ******Banco Start*****
    ********Menu**********

    [d] Depositar
    [s] Sacar
    [e] Extrato
    [u] Criar Usuário
    [c] Criar Conta Pessoa Física
    [l] Listar Contas
    [q] Sair
    

    =>
    *********************
    '''
    return(input(textwrap.dedent(menu)))

def depositar(saldo, valor, extrato, /):  
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
        print("\n *** Depósito realizado com sucesso! ***")    
    else:
        print("Operação cancelada! Valor informado é inválido!") 
    
    return saldo, extrato  
         
def sacar(*, saldo, valor, extrato, limite, numero_saque, limite_saques):
    if valor > saldo:
        print("Operação falhou! Você não tem saldo suficiente!")
            
    elif valor > limite:
        print("Operação falhou! Excedeu o valor do limite!")
            
    elif numero_saque >= limite_saques:
        print("Operação falhou! Excedeu limite de saques!")
            
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_saque += 1  
        print("\n ***Saque realizado com sucesso! Retire seu dinheiro na boca do caixa!*** \n")          
    else:
        print("Operação falhou! O valor informado é inválido!")  
    
    return saldo, extrato    

def exibir_extrato(saldo, /, *, extrato):
    print("\n *******Extrato********\n")
    if not extrato:
        print("Nenhum movimento efetuado até agora.")
    else:
        print(extrato)
    print(f"\n Saldo: R$ {saldo:.2f}")
    print("\n*************************")


def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n### Já existe usuário com esse CPF! ###")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, numero - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("*** Usuário cadastrado com sucesso! ***")
    
def criar_conta(agencia, numero_conta, usuarios):   
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n***Conta criada com sucesso! ***")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\n### Usuário não encontrado, fluxo de criação de conta encerrado! ###") 

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))
        
#def excluir_conta(usuario, numero_conta, cpf, ):
   
def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saque = 0
    usuarios = []
    contas = []
    #numero_conta = 1

    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saque=numero_saque,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "u":
            criar_usuario(usuarios)

        elif opcao == "c":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)
                #numero_conta += 1

        elif opcao == "l":
            listar_contas(contas)

        elif opcao == "q":
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")


main()
           
